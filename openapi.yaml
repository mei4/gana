openapi: 3.0.1
info:
  title: GanApp API
  description: GanApp API specification
  version: "0.1"
servers:
- url: http://54.217.5.65:3000
- url: http://localhost:4000
paths:
  /products:
    get:
      description: Gets all the products
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                All products:
                  value:
                  - amount: 2
                    _id: some-id
                    name: patates
                    dateAdded: 2020-07-03T11:52:41.998Z
                    __v: 0
                  - amount: 3
                    _id: some-other-id
                    name: dracs
                    dateAdded: 2020-07-03T11:52:41.998Z
                    __v: 0
    post:
      description: Creates a new product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
            examples:
              only specifying name:
                value: |-
                  {
                      "name": "some-product-name"
                  }
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Created product:
                  value:
                    amount: 2
                    _id: some-id
                    name: patates
                    dateAdded: 2020-07-03T11:52:41.998Z
                    __v: 0
        "409":
          description: Product name already exists.
          content:
            application/json; charset=utf-8:
              schema:
                type: string
  /products/{id}:
    get:
      description: Gets the specific product
      parameters:
      - name: id
        in: path
        description: The id of the product to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                A specific product:
                  value:
                    amount: 2
                    _id: some-id
                    name: patates
                    dateAdded: 2020-07-03T11:52:41.998Z
                    __v: 0
        "400":
          description: Invalid ID
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Error message:
                  value:
                    message: 'ID [123] has an invalid format.'
        "404":
          description: Not found
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Error message:
                  value:
                    message: 'Product with id [123] does not exist.'
    put:
      description: Updates the specific product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
            examples:
              updates the name:
                value: |-
                  {
                      "name": "new-name"
                  }
      parameters:
      - name: id
        in: path
        description: The id of the product to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                A specific product:
                  value:
                    amount: 2
                    _id: some-id
                    name: patates
                    dateAdded: 2020-07-03T11:52:41.998Z
                    __v: 0
        "400":
          description: Invalid ID
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Error message:
                  value:
                    message: 'ID [123] has an invalid format.'
        "404":
          description: Not found
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Error message:
                  value:
                    message: 'Product with id [123] does not exist.'
        "409":
          description: Product name already exists.
          content:
            application/json; charset=utf-8:
              schema:
                type: string
    delete:
      description: Deletes the specific product
      parameters:
      - name: id
        in: path
        description: The id of the product to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Delete successful:
                  value:
                    message: Product [cheese] was succesfully deleted.
        "400":
          description: Invalid ID
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Error message:
                  value:
                    message: 'ID [123] has an invalid format.'
        "404":
          description: Not found
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                Error message:
                  value:
                    message: 'Product with id [123] does not exist.'
components:
  schemas:
    product:
      type: object
      properties:
        name:
          type: string